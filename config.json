[
  {
    "id": "dataStructure_algorithm",
    "label": "数据结构及算法",
    "children": [
      {
        "id": "dataStructure",
        "label": "数据结构",
        "articles": [
          { "name": "基本概念", "url": "./posts/dataStructure/基本概念.html" },
          { "name": "线性表", "url": "./posts/dataStructure/线性表.html" },
          { "name": "栈", "url": "./posts/dataStructure/栈.html" },
          { "name": "队列", "url": "./posts/dataStructure/队列.html" },
          { "name": "树", "url": "./posts/dataStructure/树.html" },
          { "name": "图", "url": "./posts/dataStructure/图.html" }
        ]
      },
      {
        "id": "algorithm",
        "label": "算法",
        "articles": [
          { "name": "基本概念", "url": "./posts/algorithm/基本概念.html" }
        ]
      }
    ]
  },
  {
    "id": "java",
    "label": "Java",
    "children": [
      {
        "id": "javaBase",
        "label": "Java基础强化",
        "articles": [
          { "name": "static关键字", "url": "./posts/java/javaBase/static关键字.html" },
          { "name": "泛型机制", "url": "./posts/java/javaBase/泛型机制.html" },
          { "name": "解决hash冲突的常用方法", "url": "./posts/java/javaBase/解决hash冲突的常用方法.html" },
          { "name": "三元运算符与类型转换", "url": "./posts/java/javaBase/三元运算符与类型转换.html" }
        ]
      },
      {
        "id": "effectiveJava",
        "label": "Effective Java",
        "articles": [
          { "name": "考虑用静态工厂方法代替构造器", "url": "./posts/java/effectiveJava/考虑用静态工厂方法代替构造器.html" },
          { "name": "遇到多个构造器参数时考虑用构建器", "url": "./posts/java/effectiveJava/遇到多个构造器参数时考虑用构建器.html" }
        ]
      }
    ]
  }
]
